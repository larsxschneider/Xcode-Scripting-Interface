/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <DevToolsCore/XCOperationArbitrator.h>

@class NSDate, NSMutableSet;

@interface XCWorkQueueOperationArbitrator : XCOperationArbitrator
{
    NSMutableSet *_runningCommands;
    BOOL _useResourceManagement;
    BOOL _useAdaptiveResourceManagement;
    unsigned long long _reservedSystemMemory;
    unsigned long long _compileJobMemoryBaseline;
    unsigned long long _compileJobMemoryWithCPlusPlus;
    unsigned long long _compileJobMemoryWithPrecompiledHeader;
    unsigned long long _precompileJobMemoryBaseline;
    unsigned long long _precompileJobMemoryWithCPlusPlus;
    unsigned long long _linkJobMemoryBaseline;
    double _checkResourcePressureInterval;
    unsigned long long _adaptiveDecrementStep;
    unsigned long long _adaptiveIncrementStep;
    unsigned long long _adaptiveIncrementStepUnderPressure;
    unsigned long long _physicalMemory;
    unsigned long long _maxMemoryInUse;
    unsigned long long _curMemoryInUse;
    NSDate *_lastCheckedResourcePressure;
    unsigned long long _lastHighWaterMarkForMemoryPressure;
}

+ (id)sharedOperationArbitrator;
- (void)adjustResourceParametersIfNecessary;
- (unsigned long long)compileJobAdditionalMemoryWithCPlusPlus;
- (unsigned long long)compileJobAdditionalMemoryWithPrecompiledHeader;
- (unsigned long long)compileJobMemoryBaseline;
- (unsigned long long)currentMemoryInUse;
- (void)dealloc;
- (void)incrementMemoryInUse:(unsigned long long)arg1;
- (id)init;
- (unsigned long long)linkJobMemoryBaseline;
- (unsigned long long)maximumMemoryInUse;
- (void)operationDidStop:(id)arg1;
- (unsigned long long)precompileJobAdditionalMemoryWithCPlusPlus;
- (unsigned long long)precompileJobMemoryBaseline;
- (void)registerRunningOperation:(id)arg1;
- (unsigned long long)reservedSystemMemory;
- (BOOL)useAdaptiveResourceManagement;
- (BOOL)useResourceManagement;
- (void)workQueueOperation:(id)arg1 commandDidFinish:(id)arg2;
- (void)workQueueOperation:(id)arg1 commandDidStart:(id)arg2;

@end

